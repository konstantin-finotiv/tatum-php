<?php

/**
 * XrpAccount_account_data Model
 *
 * @version   3.17.1
 * @copyright (c) 2022-2023 tatum.io
 * @license   MIT
 * @package   Tatum
 * @author    Mark Jivko
 * @link      https://tatum.io/
 *
 * NOTE: This class is auto generated by tatum.io
 * Do not edit this file manually
 */

namespace Tatum\Model;

use InvalidArgumentException as IAE;

/**
 * XrpAccount_account_data Model
 * 
 * @description The AccountRoot ledger object with this account&#39;s information, as stored in the ledger.
 */
class XrpAccountAccountData extends AbstractModel {

    public const DISCRIMINATOR = null;
    protected static $_name = "XrpAccount_account_data";
    protected static $_definition = [
        "account" => ["Account", "string", null, "getAccount", "setAccount"], 
        "balance" => ["Balance", "string", null, "getBalance", "setBalance"], 
        "flags" => ["Flags", "float", null, "getFlags", "setFlags"], 
        "ledger_entry_type" => ["LedgerEntryType", "string", null, "getLedgerEntryType", "setLedgerEntryType"], 
        "owner_count" => ["OwnerCount", "float", null, "getOwnerCount", "setOwnerCount"], 
        "previous_txn_id" => ["PreviousTxnID", "string", null, "getPreviousTxnId", "setPreviousTxnId"], 
        "previous_txn_lgr_seq" => ["PreviousTxnLgrSeq", "float", null, "getPreviousTxnLgrSeq", "setPreviousTxnLgrSeq"], 
        "sequence" => ["Sequence", "float", null, "getSequence", "setSequence"], 
        "index" => ["index", "string", null, "getIndex", "setIndex"]
    ];

    /**
     * XrpAccountAccountData
     *
     * @param mixed[] $data Model data
     */
    public function __construct(array $data = []) {
        foreach(["account"=>null, "balance"=>null, "flags"=>null, "ledger_entry_type"=>null, "owner_count"=>null, "previous_txn_id"=>null, "previous_txn_lgr_seq"=>null, "sequence"=>null, "index"=>null] as $k => $v) {
            $this->_data[$k] = $data[$k] ?? $v;
        }
    }

    /**
     * {@inheritdoc}
     */
    public function listInvalidProperties(): array {
        $ip = [];

        
        return $ip;
    }

    /**
     * Get account
     *
     * @return string|null
     */
    public function getAccount(): ?string {
        return $this->_data["account"];
    }

    /**
     * Set account
     * 
     * @param string|null $account The identifying address of this account, such as rf1BiGeXwwQoi8Z2ueFYTEXSwuJYfV2Jpn.
     * @return $this
     */
    public function setAccount(?string $account) {
        $this->_data['account'] = $account;

        return $this;
    }

    /**
     * Get balance
     *
     * @return string|null
     */
    public function getBalance(): ?string {
        return $this->_data["balance"];
    }

    /**
     * Set balance
     * 
     * @param string|null $balance The account's current XRP balance in drops, represented as a string.
     * @return $this
     */
    public function setBalance(?string $balance) {
        $this->_data['balance'] = $balance;

        return $this;
    }

    /**
     * Get flags
     *
     * @return float|null
     */
    public function getFlags(): ?float {
        return $this->_data["flags"];
    }

    /**
     * Set flags
     * 
     * @param float|null $flags A bit-map of boolean flags enabled for this account.
     * @return $this
     */
    public function setFlags(?float $flags) {
        $this->_data['flags'] = $flags;

        return $this;
    }

    /**
     * Get ledger_entry_type
     *
     * @return string|null
     */
    public function getLedgerEntryType(): ?string {
        return $this->_data["ledger_entry_type"];
    }

    /**
     * Set ledger_entry_type
     * 
     * @param string|null $ledger_entry_type The value 0x0061, mapped to the string AccountRoot, indicates that this is an AccountRoot object.
     * @return $this
     */
    public function setLedgerEntryType(?string $ledger_entry_type) {
        $this->_data['ledger_entry_type'] = $ledger_entry_type;

        return $this;
    }

    /**
     * Get owner_count
     *
     * @return float|null
     */
    public function getOwnerCount(): ?float {
        return $this->_data["owner_count"];
    }

    /**
     * Set owner_count
     * 
     * @param float|null $owner_count The number of objects this account owns in the ledger, which contributes to its owner reserve.
     * @return $this
     */
    public function setOwnerCount(?float $owner_count) {
        $this->_data['owner_count'] = $owner_count;

        return $this;
    }

    /**
     * Get previous_txn_id
     *
     * @return string|null
     */
    public function getPreviousTxnId(): ?string {
        return $this->_data["previous_txn_id"];
    }

    /**
     * Set previous_txn_id
     * 
     * @param string|null $previous_txn_id The identifying hash of the transaction that most recently modified this object.
     * @return $this
     */
    public function setPreviousTxnId(?string $previous_txn_id) {
        $this->_data['previous_txn_id'] = $previous_txn_id;

        return $this;
    }

    /**
     * Get previous_txn_lgr_seq
     *
     * @return float|null
     */
    public function getPreviousTxnLgrSeq(): ?float {
        return $this->_data["previous_txn_lgr_seq"];
    }

    /**
     * Set previous_txn_lgr_seq
     * 
     * @param float|null $previous_txn_lgr_seq The index of the ledger that contains the transaction that most recently modified this object.
     * @return $this
     */
    public function setPreviousTxnLgrSeq(?float $previous_txn_lgr_seq) {
        $this->_data['previous_txn_lgr_seq'] = $previous_txn_lgr_seq;

        return $this;
    }

    /**
     * Get sequence
     *
     * @return float|null
     */
    public function getSequence(): ?float {
        return $this->_data["sequence"];
    }

    /**
     * Set sequence
     * 
     * @param float|null $sequence The sequence number of the next valid transaction for this account. (Each account starts with Sequence = 1 and increases each time a transaction is made.)
     * @return $this
     */
    public function setSequence(?float $sequence) {
        $this->_data['sequence'] = $sequence;

        return $this;
    }

    /**
     * Get index
     *
     * @return string|null
     */
    public function getIndex(): ?string {
        return $this->_data["index"];
    }

    /**
     * Set index
     * 
     * @param string|null $index index
     * @return $this
     */
    public function setIndex(?string $index) {
        $this->_data['index'] = $index;

        return $this;
    }
}
