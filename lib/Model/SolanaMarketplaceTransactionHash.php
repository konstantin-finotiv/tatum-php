<?php

/**
 * SolanaMarketplaceTransactionHash Model
 *
 * @copyright (c) 2022-2023 tatum.io
 * @license   MIT
 * @package   Tatum
 * @author    Mark Jivko
 * @link      https://tatum.io/
 *
 * NOTE: This class is auto generated by tatum.io
 * Do not edit this file manually
 */

namespace Tatum\Model;

use InvalidArgumentException as IAE;

/**
 * SolanaMarketplaceTransactionHash Model
 */
class SolanaMarketplaceTransactionHash extends AbstractModel {

    public const DISCRIMINATOR = null;
    protected static $_name = "SolanaMarketplaceTransactionHash";
    protected static $_definition = [
        "tx_id" => ["txId", "string", null, "getTxId", "setTxId"], 
        "contract_address" => ["contractAddress", "string", null, "getContractAddress", "setContractAddress"], 
        "fee_account" => ["feeAccount", "string", null, "getFeeAccount", "setFeeAccount"], 
        "treasury_account" => ["treasuryAccount", "string", null, "getTreasuryAccount", "setTreasuryAccount"]
    ];

    /**
     * SolanaMarketplaceTransactionHash
     *
     * @param mixed[] $data Model data
     */
    public function __construct(array $data = []) {
        foreach(["tx_id"=>null, "contract_address"=>null, "fee_account"=>null, "treasury_account"=>null] as $k => $v) {
            $this->_data[$k] = $data[$k] ?? $v;
        }
    }

    /**
     * {@inheritdoc}
     */
    public function listInvalidProperties(): array {
        $ip = [];

        if (is_null($this->_data['tx_id'])) {
            $ip[] = "'tx_id' can't be null";
        }
        if (is_null($this->_data['contract_address'])) {
            $ip[] = "'contract_address' can't be null";
        }
        if (is_null($this->_data['fee_account'])) {
            $ip[] = "'fee_account' can't be null";
        }
        if (is_null($this->_data['treasury_account'])) {
            $ip[] = "'treasury_account' can't be null";
        }
        
        return $ip;
    }

    /**
     * Get tx_id
     *
     * @return string
     */
    public function getTxId(): string {
        return $this->_data["tx_id"];
    }

    /**
     * Set tx_id
     * 
     * @param string $tx_id The hash (ID) of the transaction
     * @return $this
     */
    public function setTxId(string $tx_id) {
        $this->_data['tx_id'] = $tx_id;

        return $this;
    }

    /**
     * Get contract_address
     *
     * @return string
     */
    public function getContractAddress(): string {
        return $this->_data["contract_address"];
    }

    /**
     * Set contract_address
     * 
     * @param string $contract_address The address of deployed marketplace contract
     * @return $this
     */
    public function setContractAddress(string $contract_address) {
        $this->_data['contract_address'] = $contract_address;

        return $this;
    }

    /**
     * Get fee_account
     *
     * @return string
     */
    public function getFeeAccount(): string {
        return $this->_data["fee_account"];
    }

    /**
     * Set fee_account
     * 
     * @param string $fee_account The blockchain address of the fee account
     * @return $this
     */
    public function setFeeAccount(string $fee_account) {
        $this->_data['fee_account'] = $fee_account;

        return $this;
    }

    /**
     * Get treasury_account
     *
     * @return string
     */
    public function getTreasuryAccount(): string {
        return $this->_data["treasury_account"];
    }

    /**
     * Set treasury_account
     * 
     * @param string $treasury_account The blockchain address of the treasury account
     * @return $this
     */
    public function setTreasuryAccount(string $treasury_account) {
        $this->_data['treasury_account'] = $treasury_account;

        return $this;
    }
}
