<?php

/**
 * FlowAccount Model
 *
 * @version   3.17.0
 * @copyright (c) 2022-2023 tatum.io
 * @license   MIT
 * @package   Tatum
 * @author    Mark Jivko
 * @link      https://tatum.io/
 *
 * NOTE: This class is auto generated by tatum.io
 * Do not edit this file manually
 */

namespace Tatum\Model;

use InvalidArgumentException as IAE;

/**
 * FlowAccount Model
 */
class FlowAccount extends AbstractModel {

    public const DISCRIMINATOR = null;
    protected static $_name = "FlowAccount";
    protected static $_definition = [
        "address" => ["address", "string", null, "getAddress", "setAddress"], 
        "balance" => ["balance", "float", null, "getBalance", "setBalance"], 
        "code" => ["code", "string", null, "getCode", "setCode"], 
        "contracts" => ["contracts", "object", null, "getContracts", "setContracts"], 
        "keys" => ["keys", "\Tatum\Model\FlowAccountKeysInner[]", null, "getKeys", "setKeys"]
    ];

    /**
     * FlowAccount
     *
     * @param mixed[] $data Model data
     */
    public function __construct(array $data = []) {
        foreach(["address"=>null, "balance"=>null, "code"=>null, "contracts"=>null, "keys"=>null] as $k => $v) {
            $this->_data[$k] = $data[$k] ?? $v;
        }
    }

    /**
     * {@inheritdoc}
     */
    public function listInvalidProperties(): array {
        $ip = [];

        
        return $ip;
    }

    /**
     * Get address
     *
     * @return string|null
     */
    public function getAddress(): ?string {
        return $this->_data["address"];
    }

    /**
     * Set address
     * 
     * @param string|null $address Account address.
     * @return $this
     */
    public function setAddress(?string $address) {
        $this->_data['address'] = $address;

        return $this;
    }

    /**
     * Get balance
     *
     * @return float|null
     */
    public function getBalance(): ?float {
        return $this->_data["balance"];
    }

    /**
     * Set balance
     * 
     * @param float|null $balance Balance of the account in smallest FLOW unit = 1 FLOW = 1e8 unit
     * @return $this
     */
    public function setBalance(?float $balance) {
        $this->_data['balance'] = $balance;

        return $this;
    }

    /**
     * Get code
     *
     * @return string|null
     */
    public function getCode(): ?string {
        return $this->_data["code"];
    }

    /**
     * Set code
     * 
     * @param string|null $code Account code
     * @return $this
     */
    public function setCode(?string $code) {
        $this->_data['code'] = $code;

        return $this;
    }

    /**
     * Get contracts
     *
     * @return object|null
     */
    public function getContracts(): ?object {
        return $this->_data["contracts"];
    }

    /**
     * Set contracts
     * 
     * @param object|null $contracts contracts
     * @return $this
     */
    public function setContracts(?object $contracts) {
        $this->_data['contracts'] = $contracts;

        return $this;
    }

    /**
     * Get keys
     *
     * @return \Tatum\Model\FlowAccountKeysInner[]|null
     */
    public function getKeys(): ?array {
        return $this->_data["keys"];
    }

    /**
     * Set keys
     * 
     * @param \Tatum\Model\FlowAccountKeysInner[]|null $keys Array of public keys assigned.
     * @return $this
     */
    public function setKeys(?array $keys) {
        $this->_data['keys'] = $keys;

        return $this;
    }
}
