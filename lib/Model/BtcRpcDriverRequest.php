<?php

/**
 * BtcRpcDriver_request Model
 *
 * @version   3.17.1
 * @copyright (c) 2022-2023 tatum.io
 * @license   MIT
 * @package   Tatum
 * @author    Mark Jivko
 * @link      https://tatum.io/
 *
 * NOTE: This class is auto generated by tatum.io
 * Do not edit this file manually
 */

namespace Tatum\Model;

use InvalidArgumentException as IAE;

/**
 * BtcRpcDriver_request Model
 * 
 * @description Any valid JSON RPC method content body.
 */
class BtcRpcDriverRequest extends AbstractModel {

    public const DISCRIMINATOR = null;
    protected static $_name = "BtcRpcDriver_request";
    protected static $_definition = [
        "jsonrpc" => ["jsonrpc", "string", null, "getJsonrpc", "setJsonrpc"], 
        "id" => ["id", "string", null, "getId", "setId"], 
        "method" => ["method", "string", null, "getMethod", "setMethod"], 
        "params" => ["params", "object[]", null, "getParams", "setParams"]
    ];

    /**
     * BtcRpcDriverRequest
     *
     * @param mixed[] $data Model data
     */
    public function __construct(array $data = []) {
        foreach(["jsonrpc"=>null, "id"=>null, "method"=>null, "params"=>null] as $k => $v) {
            $this->_data[$k] = $data[$k] ?? $v;
        }
    }

    /**
     * {@inheritdoc}
     */
    public function listInvalidProperties(): array {
        $ip = [];

        
        return $ip;
    }

    /**
     * Get jsonrpc
     *
     * @return string|null
     */
    public function getJsonrpc(): ?string {
        return $this->_data["jsonrpc"];
    }

    /**
     * Set jsonrpc
     * 
     * @param string|null $jsonrpc Version of the JSON RPC.
     * @return $this
     */
    public function setJsonrpc(?string $jsonrpc) {
        $this->_data['jsonrpc'] = $jsonrpc;

        return $this;
    }

    /**
     * Get id
     *
     * @return string|null
     */
    public function getId(): ?string {
        return $this->_data["id"];
    }

    /**
     * Set id
     * 
     * @param string|null $id ID of the request, could be any arbitrary identifier.
     * @return $this
     */
    public function setId(?string $id) {
        $this->_data['id'] = $id;

        return $this;
    }

    /**
     * Get method
     *
     * @return string|null
     */
    public function getMethod(): ?string {
        return $this->_data["method"];
    }

    /**
     * Set method
     * 
     * @param string|null $method Method to invoke on the node.
     * @return $this
     */
    public function setMethod(?string $method) {
        $this->_data['method'] = $method;

        return $this;
    }

    /**
     * Get params
     *
     * @return object[]|null
     */
    public function getParams(): ?array {
        return $this->_data["params"];
    }

    /**
     * Set params
     * 
     * @param object[]|null $params Params to the method call, if required.
     * @return $this
     */
    public function setParams(?array $params) {
        $this->_data['params'] = $params;

        return $this;
    }
}
