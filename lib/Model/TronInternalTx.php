<?php

/**
 * TronInternalTx Model
 *
 * @copyright (c) 2022-2023 tatum.io
 * @license   MIT
 * @package   Tatum
 * @author    Mark Jivko
 * @link      https://tatum.io/
 *
 * NOTE: This class is auto generated by tatum.io
 * Do not edit this file manually
 */

namespace Tatum\Model;

use InvalidArgumentException as IAE;

/**
 * TronInternalTx Model
 */
class TronInternalTx extends AbstractModel {

    public const DISCRIMINATOR = null;
    protected static $_name = "TronInternalTx";
    protected static $_definition = [
        "tx_id" => ["tx_id", "string", null, "getTxId", "setTxId"], 
        "internal_tx_id" => ["internal_tx_id", "string", null, "getInternalTxId", "setInternalTxId"], 
        "to_address" => ["to_address", "string", null, "getToAddress", "setToAddress"], 
        "from_address" => ["from_address", "string", null, "getFromAddress", "setFromAddress"]
    ];

    /**
     * TronInternalTx
     *
     * @param mixed[] $data Model data
     */
    public function __construct(array $data = []) {
        foreach(["tx_id"=>null, "internal_tx_id"=>null, "to_address"=>null, "from_address"=>null] as $k => $v) {
            $this->_data[$k] = $data[$k] ?? $v;
        }
    }

    /**
     * {@inheritdoc}
     */
    public function listInvalidProperties(): array {
        $ip = [];

        if (is_null($this->_data['tx_id'])) {
            $ip[] = "'tx_id' can't be null";
        }
        if (is_null($this->_data['internal_tx_id'])) {
            $ip[] = "'internal_tx_id' can't be null";
        }
        if (is_null($this->_data['to_address'])) {
            $ip[] = "'to_address' can't be null";
        }
        if (is_null($this->_data['from_address'])) {
            $ip[] = "'from_address' can't be null";
        }
        
        return $ip;
    }

    /**
     * Get tx_id
     *
     * @return string
     */
    public function getTxId(): string {
        return $this->_data["tx_id"];
    }

    /**
     * Set tx_id
     * 
     * @param string $tx_id Transaction ID.
     * @return $this
     */
    public function setTxId(string $tx_id) {
        $this->_data['tx_id'] = $tx_id;

        return $this;
    }

    /**
     * Get internal_tx_id
     *
     * @return string
     */
    public function getInternalTxId(): string {
        return $this->_data["internal_tx_id"];
    }

    /**
     * Set internal_tx_id
     * 
     * @param string $internal_tx_id Internal TX ID.
     * @return $this
     */
    public function setInternalTxId(string $internal_tx_id) {
        $this->_data['internal_tx_id'] = $internal_tx_id;

        return $this;
    }

    /**
     * Get to_address
     *
     * @return string
     */
    public function getToAddress(): string {
        return $this->_data["to_address"];
    }

    /**
     * Set to_address
     * 
     * @param string $to_address Recipient address.
     * @return $this
     */
    public function setToAddress(string $to_address) {
        $this->_data['to_address'] = $to_address;

        return $this;
    }

    /**
     * Get from_address
     *
     * @return string
     */
    public function getFromAddress(): string {
        return $this->_data["from_address"];
    }

    /**
     * Set from_address
     * 
     * @param string $from_address Sender address.
     * @return $this
     */
    public function setFromAddress(string $from_address) {
        $this->_data['from_address'] = $from_address;

        return $this;
    }
}
