<?php

/**
 * EthTxInternal Model
 *
 * @version   3.17.1
 * @copyright (c) 2022-2023 tatum.io
 * @license   MIT
 * @package   Tatum
 * @author    Mark Jivko
 * @link      https://tatum.io/
 *
 * NOTE: This class is auto generated by tatum.io
 * Do not edit this file manually
 */

namespace Tatum\Model;

use InvalidArgumentException as IAE;

/**
 * EthTxInternal Model
 */
class EthTxInternal extends AbstractModel {

    public const DISCRIMINATOR = null;
    protected static $_name = "EthTxInternal";
    protected static $_definition = [
        "from" => ["from", "string", null, "getFrom", "setFrom"], 
        "to" => ["to", "string", null, "getTo", "setTo"], 
        "value" => ["value", "string", null, "getValue", "setValue"], 
        "block_number" => ["blockNumber", "float", null, "getBlockNumber", "setBlockNumber"], 
        "time_stamp" => ["timeStamp", "string", null, "getTimeStamp", "setTimeStamp"], 
        "hash" => ["hash", "string", null, "getHash", "setHash"], 
        "input" => ["input", "string", null, "getInput", "setInput"], 
        "trace_id" => ["traceId", "string", null, "getTraceId", "setTraceId"], 
        "type" => ["type", "string", null, "getType", "setType"], 
        "err_code" => ["errCode", "string", null, "getErrCode", "setErrCode"], 
        "gas" => ["gas", "float", null, "getGas", "setGas"], 
        "is_error" => ["isError", "string", null, "getIsError", "setIsError"], 
        "gas_used" => ["gasUsed", "float", null, "getGasUsed", "setGasUsed"], 
        "contract_address" => ["contractAddress", "string", null, "getContractAddress", "setContractAddress"]
    ];

    /**
     * EthTxInternal
     *
     * @param mixed[] $data Model data
     */
    public function __construct(array $data = []) {
        foreach(["from"=>null, "to"=>null, "value"=>null, "block_number"=>null, "time_stamp"=>null, "hash"=>null, "input"=>null, "trace_id"=>null, "type"=>null, "err_code"=>null, "gas"=>null, "is_error"=>null, "gas_used"=>null, "contract_address"=>null] as $k => $v) {
            $this->_data[$k] = $data[$k] ?? $v;
        }
    }

    /**
     * {@inheritdoc}
     */
    public function listInvalidProperties(): array {
        $ip = [];

        
        return $ip;
    }

    /**
     * Get from
     *
     * @return string|null
     */
    public function getFrom(): ?string {
        return $this->_data["from"];
    }

    /**
     * Set from
     * 
     * @param string|null $from Address of the sender.
     * @return $this
     */
    public function setFrom(?string $from) {
        $this->_data['from'] = $from;

        return $this;
    }

    /**
     * Get to
     *
     * @return string|null
     */
    public function getTo(): ?string {
        return $this->_data["to"];
    }

    /**
     * Set to
     * 
     * @param string|null $to Address of the receiver. 'null' when its a contract creation transaction.
     * @return $this
     */
    public function setTo(?string $to) {
        $this->_data['to'] = $to;

        return $this;
    }

    /**
     * Get value
     *
     * @return string|null
     */
    public function getValue(): ?string {
        return $this->_data["value"];
    }

    /**
     * Set value
     * 
     * @param string|null $value Value transferred in wei.
     * @return $this
     */
    public function setValue(?string $value) {
        $this->_data['value'] = $value;

        return $this;
    }

    /**
     * Get block_number
     *
     * @return float|null
     */
    public function getBlockNumber(): ?float {
        return $this->_data["block_number"];
    }

    /**
     * Set block_number
     * 
     * @param float|null $block_number Block number where this transaction was in.
     * @return $this
     */
    public function setBlockNumber(?float $block_number) {
        $this->_data['block_number'] = $block_number;

        return $this;
    }

    /**
     * Get time_stamp
     *
     * @return string|null
     */
    public function getTimeStamp(): ?string {
        return $this->_data["time_stamp"];
    }

    /**
     * Set time_stamp
     * 
     * @param string|null $time_stamp Time of the transaction in seconds.
     * @return $this
     */
    public function setTimeStamp(?string $time_stamp) {
        $this->_data['time_stamp'] = $time_stamp;

        return $this;
    }

    /**
     * Get hash
     *
     * @return string|null
     */
    public function getHash(): ?string {
        return $this->_data["hash"];
    }

    /**
     * Set hash
     * 
     * @param string|null $hash Hash of the transaction.
     * @return $this
     */
    public function setHash(?string $hash) {
        $this->_data['hash'] = $hash;

        return $this;
    }

    /**
     * Get input
     *
     * @return string|null
     */
    public function getInput(): ?string {
        return $this->_data["input"];
    }

    /**
     * Set input
     * 
     * @param string|null $input The data sent along with the transaction.
     * @return $this
     */
    public function setInput(?string $input) {
        $this->_data['input'] = $input;

        return $this;
    }

    /**
     * Get trace_id
     *
     * @return string|null
     */
    public function getTraceId(): ?string {
        return $this->_data["trace_id"];
    }

    /**
     * Set trace_id
     * 
     * @param string|null $trace_id Trace ID.
     * @return $this
     */
    public function setTraceId(?string $trace_id) {
        $this->_data['trace_id'] = $trace_id;

        return $this;
    }

    /**
     * Get type
     *
     * @return string|null
     */
    public function getType(): ?string {
        return $this->_data["type"];
    }

    /**
     * Set type
     * 
     * @param string|null $type Type of the transaction.
     * @return $this
     */
    public function setType(?string $type) {
        $this->_data['type'] = $type;

        return $this;
    }

    /**
     * Get err_code
     *
     * @return string|null
     */
    public function getErrCode(): ?string {
        return $this->_data["err_code"];
    }

    /**
     * Set err_code
     * 
     * @param string|null $err_code Error code.
     * @return $this
     */
    public function setErrCode(?string $err_code) {
        $this->_data['err_code'] = $err_code;

        return $this;
    }

    /**
     * Get gas
     *
     * @return float|null
     */
    public function getGas(): ?float {
        return $this->_data["gas"];
    }

    /**
     * Set gas
     * 
     * @param float|null $gas Gas provided by the sender.
     * @return $this
     */
    public function setGas(?float $gas) {
        $this->_data['gas'] = $gas;

        return $this;
    }

    /**
     * Get is_error
     *
     * @return string|null
     */
    public function getIsError(): ?string {
        return $this->_data["is_error"];
    }

    /**
     * Set is_error
     * 
     * @param string|null $is_error 1 if the transaction was not successful, 0 otherwise.
     * @return $this
     */
    public function setIsError(?string $is_error) {
        $this->_data['is_error'] = $is_error;

        return $this;
    }

    /**
     * Get gas_used
     *
     * @return float|null
     */
    public function getGasUsed(): ?float {
        return $this->_data["gas_used"];
    }

    /**
     * Set gas_used
     * 
     * @param float|null $gas_used The amount of gas used by this specific transaction alone.
     * @return $this
     */
    public function setGasUsed(?float $gas_used) {
        $this->_data['gas_used'] = $gas_used;

        return $this;
    }

    /**
     * Get contract_address
     *
     * @return string|null
     */
    public function getContractAddress(): ?string {
        return $this->_data["contract_address"];
    }

    /**
     * Set contract_address
     * 
     * @param string|null $contract_address The contract address created, if the transaction was a contract creation, otherwise null.
     * @return $this
     */
    public function setContractAddress(?string $contract_address) {
        $this->_data['contract_address'] = $contract_address;

        return $this;
    }
}
