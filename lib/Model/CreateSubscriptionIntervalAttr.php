<?php

/**
 * CreateSubscriptionInterval_attr Model
 *
 * @version   3.17.1
 * @copyright (c) 2022-2023 tatum.io
 * @license   MIT
 * @package   Tatum
 * @author    Mark Jivko
 * @link      https://tatum.io/
 *
 * NOTE: This class is auto generated by tatum.io
 * Do not edit this file manually
 */

namespace Tatum\Model;

use InvalidArgumentException as IAE;

/**
 * CreateSubscriptionInterval_attr Model
 * 
 * @description Additional attributes based on the subscription type.
 */
class CreateSubscriptionIntervalAttr extends AbstractModel {

    public const DISCRIMINATOR = null;
    protected static $_name = "CreateSubscriptionInterval_attr";
    protected static $_definition = [
        "interval" => ["interval", "float", null, "getInterval", "setInterval"]
    ];

    /**
     * CreateSubscriptionIntervalAttr
     *
     * @param mixed[] $data Model data
     */
    public function __construct(array $data = []) {
        foreach(["interval"=>null] as $k => $v) {
            $this->_data[$k] = $data[$k] ?? $v;
        }
    }

    /**
     * {@inheritdoc}
     */
    public function listInvalidProperties(): array {
        $ip = [];

        if (is_null($this->_data['interval'])) {
            $ip[] = "'interval' can't be null";
        }
        if (($this->_data['interval'] > 720)) {
            $ip[] = "'interval' must be <= 720";
        }
        if (($this->_data['interval'] < 1)) {
            $ip[] = "'interval' must be >= 1";
        }
        
        return $ip;
    }

    /**
     * Get interval
     *
     * @return float
     */
    public function getInterval(): float {
        return $this->_data["interval"];
    }

    /**
     * Set interval
     * 
     * @param float $interval Number of hours to obtain transactions for.
     * @return $this
     */
    public function setInterval(float $interval) {
        if (($interval > 720)) {
            throw new IAE('CreateSubscriptionIntervalAttr.setInterval: $interval must be <=720');
        }
        if (($interval < 1)) {
            throw new IAE('CreateSubscriptionIntervalAttr.setInterval: $interval must be >=1');
        }
        $this->_data['interval'] = $interval;

        return $this;
    }
}
