<?php

/**
 * AlgoWallet Model
 *
 * @version   3.17.1
 * @copyright (c) 2022-2023 tatum.io
 * @license   MIT
 * @package   Tatum
 * @author    Mark Jivko
 * @link      https://tatum.io/
 *
 * NOTE: This class is auto generated by tatum.io
 * Do not edit this file manually
 */

namespace Tatum\Model;

use InvalidArgumentException as IAE;

/**
 * AlgoWallet Model
 */
class AlgoWallet extends AbstractModel {

    public const DISCRIMINATOR = null;
    protected static $_name = "AlgoWallet";
    protected static $_definition = [
        "address" => ["address", "string", null, "getAddress", "setAddress"], 
        "secret" => ["secret", "string", null, "getSecret", "setSecret"]
    ];

    /**
     * AlgoWallet
     *
     * @param mixed[] $data Model data
     */
    public function __construct(array $data = []) {
        foreach(["address"=>null, "secret"=>null] as $k => $v) {
            $this->_data[$k] = $data[$k] ?? $v;
        }
    }

    /**
     * {@inheritdoc}
     */
    public function listInvalidProperties(): array {
        $ip = [];

        if (!is_null($this->_data['address']) && (mb_strlen($this->_data['address']) > 58)) {
            $ip[] = "'address' length must be <= 58";
        }
        if (!is_null($this->_data['address']) && (mb_strlen($this->_data['address']) < 58)) {
            $ip[] = "'address' length must be >= 58";
        }
        if (!is_null($this->_data['secret']) && (mb_strlen($this->_data['secret']) > 103)) {
            $ip[] = "'secret' length must be <= 103";
        }
        if (!is_null($this->_data['secret']) && (mb_strlen($this->_data['secret']) < 103)) {
            $ip[] = "'secret' length must be >= 103";
        }
        
        return $ip;
    }

    /**
     * Get address
     *
     * @return string|null
     */
    public function getAddress(): ?string {
        return $this->_data["address"];
    }

    /**
     * Set address
     * 
     * @param string|null $address address of Algorand account.
     * @return $this
     */
    public function setAddress(?string $address) {
        if (!is_null($address) && (mb_strlen($address) > 58)) {
            throw new IAE('AlgoWallet.setAddress: $address length must be <= 58');
        }
        if (!is_null($address) && (mb_strlen($address) < 58)) {
            throw new IAE('AlgoWallet.setAddress: $address length must be >= 58');
        }
        $this->_data['address'] = $address;

        return $this;
    }

    /**
     * Get secret
     *
     * @return string|null
     */
    public function getSecret(): ?string {
        return $this->_data["secret"];
    }

    /**
     * Set secret
     * 
     * @param string|null $secret secretKey can generate Mnemonic, similar to private Key.
     * @return $this
     */
    public function setSecret(?string $secret) {
        if (!is_null($secret) && (mb_strlen($secret) > 103)) {
            throw new IAE('AlgoWallet.setSecret: $secret length must be <= 103');
        }
        if (!is_null($secret) && (mb_strlen($secret) < 103)) {
            throw new IAE('AlgoWallet.setSecret: $secret length must be >= 103');
        }
        $this->_data['secret'] = $secret;

        return $this;
    }
}
