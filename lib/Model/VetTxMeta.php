<?php

/**
 * VetTx_meta Model
 *
 * @version   3.17.0
 * @copyright (c) 2022-2023 tatum.io
 * @license   MIT
 * @package   Tatum
 * @author    Mark Jivko
 * @link      https://tatum.io/
 *
 * NOTE: This class is auto generated by tatum.io
 * Do not edit this file manually
 */

namespace Tatum\Model;

use InvalidArgumentException as IAE;

/**
 * VetTx_meta Model
 */
class VetTxMeta extends AbstractModel {

    public const DISCRIMINATOR = null;
    protected static $_name = "VetTx_meta";
    protected static $_definition = [
        "block_id" => ["blockID", "string", null, "getBlockId", "setBlockId"], 
        "block_number" => ["blockNumber", "float", null, "getBlockNumber", "setBlockNumber"], 
        "block_timestamp" => ["blockTimestamp", "float", null, "getBlockTimestamp", "setBlockTimestamp"]
    ];

    /**
     * VetTxMeta
     *
     * @param mixed[] $data Model data
     */
    public function __construct(array $data = []) {
        foreach(["block_id"=>null, "block_number"=>null, "block_timestamp"=>null] as $k => $v) {
            $this->_data[$k] = $data[$k] ?? $v;
        }
    }

    /**
     * {@inheritdoc}
     */
    public function listInvalidProperties(): array {
        $ip = [];

        
        return $ip;
    }

    /**
     * Get block_id
     *
     * @return string|null
     */
    public function getBlockId(): ?string {
        return $this->_data["block_id"];
    }

    /**
     * Set block_id
     * 
     * @param string|null $block_id block_id
     * @return $this
     */
    public function setBlockId(?string $block_id) {
        $this->_data['block_id'] = $block_id;

        return $this;
    }

    /**
     * Get block_number
     *
     * @return float|null
     */
    public function getBlockNumber(): ?float {
        return $this->_data["block_number"];
    }

    /**
     * Set block_number
     * 
     * @param float|null $block_number block_number
     * @return $this
     */
    public function setBlockNumber(?float $block_number) {
        $this->_data['block_number'] = $block_number;

        return $this;
    }

    /**
     * Get block_timestamp
     *
     * @return float|null
     */
    public function getBlockTimestamp(): ?float {
        return $this->_data["block_timestamp"];
    }

    /**
     * Set block_timestamp
     * 
     * @param float|null $block_timestamp block_timestamp
     * @return $this
     */
    public function setBlockTimestamp(?float $block_timestamp) {
        $this->_data['block_timestamp'] = $block_timestamp;

        return $this;
    }
}
