<?php

/**
 * XrpLedger Model
 *
 * @version   3.17.1
 * @copyright (c) 2022-2023 tatum.io
 * @license   MIT
 * @package   Tatum
 * @author    Mark Jivko
 * @link      https://tatum.io/
 *
 * NOTE: This class is auto generated by tatum.io
 * Do not edit this file manually
 */

namespace Tatum\Model;

use InvalidArgumentException as IAE;

/**
 * XrpLedger Model
 */
class XrpLedger extends AbstractModel {

    public const DISCRIMINATOR = null;
    protected static $_name = "XrpLedger";
    protected static $_definition = [
        "ledger" => ["ledger", "\Tatum\Model\XrpLedgerLedger", null, "getLedger", "setLedger"], 
        "ledger_hash" => ["ledger_hash", "string", null, "getLedgerHash", "setLedgerHash"], 
        "ledger_index" => ["ledger_index", "int", null, "getLedgerIndex", "setLedgerIndex"], 
        "validated" => ["validated", "bool", null, "getValidated", "setValidated"]
    ];

    /**
     * XrpLedger
     *
     * @param mixed[] $data Model data
     */
    public function __construct(array $data = []) {
        foreach(["ledger"=>null, "ledger_hash"=>null, "ledger_index"=>null, "validated"=>null] as $k => $v) {
            $this->_data[$k] = $data[$k] ?? $v;
        }
    }

    /**
     * {@inheritdoc}
     */
    public function listInvalidProperties(): array {
        $ip = [];

        
        return $ip;
    }

    /**
     * Get ledger
     *
     * @return \Tatum\Model\XrpLedgerLedger|null
     */
    public function getLedger(): ?\Tatum\Model\XrpLedgerLedger {
        return $this->_data["ledger"];
    }

    /**
     * Set ledger
     * 
     * @param \Tatum\Model\XrpLedgerLedger|null $ledger ledger
     * @return $this
     */
    public function setLedger(?\Tatum\Model\XrpLedgerLedger $ledger) {
        $this->_data['ledger'] = $ledger;

        return $this;
    }

    /**
     * Get ledger_hash
     *
     * @return string|null
     */
    public function getLedgerHash(): ?string {
        return $this->_data["ledger_hash"];
    }

    /**
     * Set ledger_hash
     * 
     * @param string|null $ledger_hash Unique identifying hash of the entire ledger.
     * @return $this
     */
    public function setLedgerHash(?string $ledger_hash) {
        $this->_data['ledger_hash'] = $ledger_hash;

        return $this;
    }

    /**
     * Get ledger_index
     *
     * @return int|null
     */
    public function getLedgerIndex(): ?int {
        return $this->_data["ledger_index"];
    }

    /**
     * Set ledger_index
     * 
     * @param int|null $ledger_index The Ledger Index of this ledger.
     * @return $this
     */
    public function setLedgerIndex(?int $ledger_index) {
        $this->_data['ledger_index'] = $ledger_index;

        return $this;
    }

    /**
     * Get validated
     *
     * @return bool|null
     */
    public function getValidated(): ?bool {
        return $this->_data["validated"];
    }

    /**
     * Set validated
     * 
     * @param bool|null $validated True if this data is from a validated ledger version; if omitted or set to false, this data is not final.
     * @return $this
     */
    public function setValidated(?bool $validated) {
        $this->_data['validated'] = $validated;

        return $this;
    }
}
