<?php

/**
 * DogeUTXO Model
 *
 * @version   3.17.0
 * @copyright (c) 2022-2023 tatum.io
 * @license   MIT
 * @package   Tatum
 * @author    Mark Jivko
 * @link      https://tatum.io/
 *
 * NOTE: This class is auto generated by tatum.io
 * Do not edit this file manually
 */

namespace Tatum\Model;

use InvalidArgumentException as IAE;

/**
 * DogeUTXO Model
 */
class DogeUTXO extends AbstractModel {

    public const DISCRIMINATOR = null;
    protected static $_name = "DogeUTXO";
    protected static $_definition = [
        "script_pub_key" => ["scriptPubKey", "\Tatum\Model\DogeTxVoutInnerScriptPubKey", null, "getScriptPubKey", "setScriptPubKey"], 
        "version" => ["version", "float", null, "getVersion", "setVersion"], 
        "height" => ["height", "float", null, "getHeight", "setHeight"], 
        "value" => ["value", "float", null, "getValue", "setValue"], 
        "coinbase" => ["coinbase", "bool", null, "getCoinbase", "setCoinbase"], 
        "bestblock" => ["bestblock", "string", null, "getBestblock", "setBestblock"]
    ];

    /**
     * DogeUTXO
     *
     * @param mixed[] $data Model data
     */
    public function __construct(array $data = []) {
        foreach(["script_pub_key"=>null, "version"=>null, "height"=>null, "value"=>null, "coinbase"=>null, "bestblock"=>null] as $k => $v) {
            $this->_data[$k] = $data[$k] ?? $v;
        }
    }

    /**
     * {@inheritdoc}
     */
    public function listInvalidProperties(): array {
        $ip = [];

        
        return $ip;
    }

    /**
     * Get script_pub_key
     *
     * @return \Tatum\Model\DogeTxVoutInnerScriptPubKey|null
     */
    public function getScriptPubKey(): ?\Tatum\Model\DogeTxVoutInnerScriptPubKey {
        return $this->_data["script_pub_key"];
    }

    /**
     * Set script_pub_key
     * 
     * @param \Tatum\Model\DogeTxVoutInnerScriptPubKey|null $script_pub_key script_pub_key
     * @return $this
     */
    public function setScriptPubKey(?\Tatum\Model\DogeTxVoutInnerScriptPubKey $script_pub_key) {
        $this->_data['script_pub_key'] = $script_pub_key;

        return $this;
    }

    /**
     * Get version
     *
     * @return float|null
     */
    public function getVersion(): ?float {
        return $this->_data["version"];
    }

    /**
     * Set version
     * 
     * @param float|null $version The version of the transaction
     * @return $this
     */
    public function setVersion(?float $version) {
        $this->_data['version'] = $version;

        return $this;
    }

    /**
     * Get height
     *
     * @return float|null
     */
    public function getHeight(): ?float {
        return $this->_data["height"];
    }

    /**
     * Set height
     * 
     * @param float|null $height The height (number) of the block where the transaction is included in
     * @return $this
     */
    public function setHeight(?float $height) {
        $this->_data['height'] = $height;

        return $this;
    }

    /**
     * Get value
     *
     * @return float|null
     */
    public function getValue(): ?float {
        return $this->_data["value"];
    }

    /**
     * Set value
     * 
     * @param float|null $value The amount of the UTXO (in 1/1000000 DOGE)
     * @return $this
     */
    public function setValue(?float $value) {
        $this->_data['value'] = $value;

        return $this;
    }

    /**
     * Get coinbase
     *
     * @return bool|null
     */
    public function getCoinbase(): ?bool {
        return $this->_data["coinbase"];
    }

    /**
     * Set coinbase
     * 
     * @param bool|null $coinbase If set to \"true\", the transaction is a coinbase transaction (a transaction created by a Bitcoin miner to collect their reward)
     * @return $this
     */
    public function setCoinbase(?bool $coinbase) {
        $this->_data['coinbase'] = $coinbase;

        return $this;
    }

    /**
     * Get bestblock
     *
     * @return string|null
     */
    public function getBestblock(): ?string {
        return $this->_data["bestblock"];
    }

    /**
     * Set bestblock
     * 
     * @param string|null $bestblock The block hash
     * @return $this
     */
    public function setBestblock(?string $bestblock) {
        $this->_data['bestblock'] = $bestblock;

        return $this;
    }
}
