<?php

/**
 * MultiTokenGetAddressBalance_200_response_inner_metadata_inner Model
 *
 * @copyright (c) 2022-2023 tatum.io
 * @license   MIT
 * @package   Tatum
 * @author    Mark Jivko
 * @link      https://tatum.io/
 *
 * NOTE: This class is auto generated by tatum.io
 * Do not edit this file manually
 */

namespace Tatum\Model;

use InvalidArgumentException as IAE;

/**
 * MultiTokenGetAddressBalance_200_response_inner_metadata_inner Model
 */
class MultiTokenGetAddressBalance200ResponseInnerMetadataInner extends AbstractModel {

    public const DISCRIMINATOR = null;
    protected static $_name = "MultiTokenGetAddressBalance_200_response_inner_metadata_inner";
    protected static $_definition = [
        "token_id" => ["tokenId", "string", null, "getTokenId", "setTokenId"], 
        "url" => ["url", "string", null, "getUrl", "setUrl"], 
        "metadata" => ["metadata", "object", null, "getMetadata", "setMetadata"]
    ];

    /**
     * MultiTokenGetAddressBalance200ResponseInnerMetadataInner
     *
     * @param mixed[] $data Model data
     */
    public function __construct(array $data = []) {
        foreach(["token_id"=>null, "url"=>null, "metadata"=>null] as $k => $v) {
            $this->_data[$k] = $data[$k] ?? $v;
        }
    }

    /**
     * {@inheritdoc}
     */
    public function listInvalidProperties(): array {
        $ip = [];

        
        return $ip;
    }

    /**
     * Get token_id
     *
     * @return string|null
     */
    public function getTokenId(): ?string {
        return $this->_data["token_id"];
    }

    /**
     * Set token_id
     * 
     * @param string|null $token_id The ID of the Multi Token owned by this address
     * @return $this
     */
    public function setTokenId(?string $token_id) {
        $this->_data['token_id'] = $token_id;

        return $this;
    }

    /**
     * Get url
     *
     * @return string|null
     */
    public function getUrl(): ?string {
        return $this->_data["url"];
    }

    /**
     * Set url
     * 
     * @param string|null $url The URL pointing to the Multi Token metadata; the URL may not be present, and if it is not returned, you can get it by calling the Multi Token Contract.uri() method
     * @return $this
     */
    public function setUrl(?string $url) {
        $this->_data['url'] = $url;

        return $this;
    }

    /**
     * Get metadata
     *
     * @return object|null
     */
    public function getMetadata(): ?object {
        return $this->_data["metadata"];
    }

    /**
     * Set metadata
     * 
     * @param object|null $metadata The metadata scheme obtained from the metadata URL; the scheme may not be present, and if it is not returned, you can get it using the <a href=\"#operation/MultiTokenGetMetadata\">Multi Token metadata API</a>
     * @return $this
     */
    public function setMetadata(?object $metadata) {
        $this->_data['metadata'] = $metadata;

        return $this;
    }
}
