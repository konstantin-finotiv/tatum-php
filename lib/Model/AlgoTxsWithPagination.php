<?php

/**
 * AlgoTxsWithPagination Model
 *
 * @copyright (c) 2022-2023 tatum.io
 * @license   MIT
 * @package   Tatum
 * @author    Mark Jivko
 * @link      https://tatum.io/
 *
 * NOTE: This class is auto generated by tatum.io
 * Do not edit this file manually
 */

namespace Tatum\Model;

use InvalidArgumentException as IAE;

/**
 * AlgoTxsWithPagination Model
 */
class AlgoTxsWithPagination extends AbstractModel {

    public const DISCRIMINATOR = null;
    protected static $_name = "AlgoTxsWithPagination";
    protected static $_definition = [
        "next_token" => ["nextToken", "string", null, "getNextToken", "setNextToken", null], 
        "transactions" => ["transactions", "\Tatum\Model\AlgoTx[]", null, "getTransactions", "setTransactions", null]
    ];

    /**
     * AlgoTxsWithPagination
     *
     * @param mixed[] $data Model data
     */
    public function __construct(array $data = []) {
        foreach(static::$_definition as $k => $v) {
            $this->_data[$k] = isset($data[$k]) ? $data[$k] : $v[5];
        }
    }
    
    /**
     * {@inheritdoc}
     */
    public function listInvalidProperties(): array {
        $ip = [];
        return $ip;
    }


    /**
     * Get next_token
     *
     * @return string|null
     */
    public function getNextToken(): ?string {
        return $this->_data["next_token"];
    }

    /**
     * Set next_token
     * 
     * @param string|null $next_token Used for pagination, when making another request provide this token with the next parameter.
     * @return $this
     */
    public function setNextToken(?string $next_token) {
        $this->_data['next_token'] = $next_token;

        return $this;
    }

    /**
     * Get transactions
     *
     * @return \Tatum\Model\AlgoTx[]|null
     */
    public function getTransactions(): ?array {
        return $this->_data["transactions"];
    }

    /**
     * Set transactions
     * 
     * @param \Tatum\Model\AlgoTx[]|null $transactions Array of transactions.
     * @return $this
     */
    public function setTransactions(?array $transactions) {
        $this->_data['transactions'] = $transactions;

        return $this;
    }
}
