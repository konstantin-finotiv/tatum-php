<?php

/**
 * EgldShardBlock Model
 *
 * @copyright (c) 2022-2023 tatum.io
 * @license   MIT
 * @package   Tatum
 * @author    Mark Jivko
 * @link      https://tatum.io/
 *
 * NOTE: This class is auto generated by tatum.io
 * Do not edit this file manually
 */

namespace Tatum\Model;

use InvalidArgumentException as IAE;

/**
 * EgldShardBlock Model
 */
class EgldShardBlock extends AbstractModel {

    public const DISCRIMINATOR = null;
    protected static $_name = "EgldShardBlock";
    protected static $_definition = [
        "hash" => ["hash", "string", null, "getHash", "setHash"], 
        "nonce" => ["nonce", "float", null, "getNonce", "setNonce"], 
        "shard" => ["shard", "float", null, "getShard", "setShard"]
    ];

    /**
     * EgldShardBlock
     *
     * @param mixed[] $data Model data
     */
    public function __construct(array $data = []) {
        foreach(["hash"=>null, "nonce"=>null, "shard"=>null] as $k => $v) {
            $this->_data[$k] = $data[$k] ?? $v;
        }
    }

    /**
     * {@inheritdoc}
     */
    public function listInvalidProperties(): array {
        $ip = [];

        
        return $ip;
    }

    /**
     * Get hash
     *
     * @return string|null
     */
    public function getHash(): ?string {
        return $this->_data["hash"];
    }

    /**
     * Set hash
     * 
     * @param string|null $hash The block hash.
     * @return $this
     */
    public function setHash(?string $hash) {
        $this->_data['hash'] = $hash;

        return $this;
    }

    /**
     * Get nonce
     *
     * @return float|null
     */
    public function getNonce(): ?float {
        return $this->_data["nonce"];
    }

    /**
     * Set nonce
     * 
     * @param float|null $nonce The block height.
     * @return $this
     */
    public function setNonce(?float $nonce) {
        $this->_data['nonce'] = $nonce;

        return $this;
    }

    /**
     * Get shard
     *
     * @return float|null
     */
    public function getShard(): ?float {
        return $this->_data["shard"];
    }

    /**
     * Set shard
     * 
     * @param float|null $shard The shard number.
     * @return $this
     */
    public function setShard(?float $shard) {
        $this->_data['shard'] = $shard;

        return $this;
    }
}
