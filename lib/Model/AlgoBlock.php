<?php

/**
 * AlgoBlock Model
 *
 * @copyright (c) 2022-2023 tatum.io
 * @license   MIT
 * @package   Tatum
 * @author    Mark Jivko
 * @link      https://tatum.io/
 *
 * NOTE: This class is auto generated by tatum.io
 * Do not edit this file manually
 */

namespace Tatum\Model;

use InvalidArgumentException as IAE;

/**
 * AlgoBlock Model
 */
class AlgoBlock extends AbstractModel {

    public const DISCRIMINATOR = null;
    protected static $_name = "AlgoBlock";
    protected static $_definition = [
        "genesis_hash" => ["genesisHash", "string", null, "getGenesisHash", "setGenesisHash"], 
        "genesis_id" => ["genesisId", "string", null, "getGenesisId", "setGenesisId"], 
        "previous_block_hash" => ["previousBlockHash", "string", null, "getPreviousBlockHash", "setPreviousBlockHash"], 
        "rewards" => ["rewards", "object", null, "getRewards", "setRewards"], 
        "round" => ["round", "float", null, "getRound", "setRound"], 
        "seed" => ["seed", "string", null, "getSeed", "setSeed"], 
        "timestamp" => ["timestamp", "float", null, "getTimestamp", "setTimestamp"], 
        "txns" => ["txns", "\Tatum\Model\AlgoTx[]", null, "getTxns", "setTxns"], 
        "txn" => ["txn", "string", null, "getTxn", "setTxn"], 
        "txnc" => ["txnc", "float", null, "getTxnc", "setTxnc"], 
        "upgrade_state" => ["upgradeState", "object", null, "getUpgradeState", "setUpgradeState"], 
        "upgrade_vote" => ["upgradeVote", "object", null, "getUpgradeVote", "setUpgradeVote"]
    ];

    /**
     * AlgoBlock
     *
     * @param mixed[] $data Model data
     */
    public function __construct(array $data = []) {
        foreach(["genesis_hash"=>null, "genesis_id"=>null, "previous_block_hash"=>null, "rewards"=>null, "round"=>null, "seed"=>null, "timestamp"=>null, "txns"=>null, "txn"=>null, "txnc"=>null, "upgrade_state"=>null, "upgrade_vote"=>null] as $k => $v) {
            $this->_data[$k] = $data[$k] ?? $v;
        }
    }

    /**
     * {@inheritdoc}
     */
    public function listInvalidProperties(): array {
        $ip = [];

        
        return $ip;
    }

    /**
     * Get genesis_hash
     *
     * @return string|null
     */
    public function getGenesisHash(): ?string {
        return $this->_data["genesis_hash"];
    }

    /**
     * Set genesis_hash
     * 
     * @param string|null $genesis_hash hash to which this block belongs
     * @return $this
     */
    public function setGenesisHash(?string $genesis_hash) {
        $this->_data['genesis_hash'] = $genesis_hash;

        return $this;
    }

    /**
     * Get genesis_id
     *
     * @return string|null
     */
    public function getGenesisId(): ?string {
        return $this->_data["genesis_id"];
    }

    /**
     * Set genesis_id
     * 
     * @param string|null $genesis_id ID to which this block belongs
     * @return $this
     */
    public function setGenesisId(?string $genesis_id) {
        $this->_data['genesis_id'] = $genesis_id;

        return $this;
    }

    /**
     * Get previous_block_hash
     *
     * @return string|null
     */
    public function getPreviousBlockHash(): ?string {
        return $this->_data["previous_block_hash"];
    }

    /**
     * Set previous_block_hash
     * 
     * @param string|null $previous_block_hash Previous block hash
     * @return $this
     */
    public function setPreviousBlockHash(?string $previous_block_hash) {
        $this->_data['previous_block_hash'] = $previous_block_hash;

        return $this;
    }

    /**
     * Get rewards
     *
     * @return object|null
     */
    public function getRewards(): ?object {
        return $this->_data["rewards"];
    }

    /**
     * Set rewards
     * 
     * @param object|null $rewards rewards
     * @return $this
     */
    public function setRewards(?object $rewards) {
        $this->_data['rewards'] = $rewards;

        return $this;
    }

    /**
     * Get round
     *
     * @return float|null
     */
    public function getRound(): ?float {
        return $this->_data["round"];
    }

    /**
     * Set round
     * 
     * @param float|null $round Current round on which this block was appended to the chain
     * @return $this
     */
    public function setRound(?float $round) {
        $this->_data['round'] = $round;

        return $this;
    }

    /**
     * Get seed
     *
     * @return string|null
     */
    public function getSeed(): ?string {
        return $this->_data["seed"];
    }

    /**
     * Set seed
     * 
     * @param string|null $seed Sortition seed.
     * @return $this
     */
    public function setSeed(?string $seed) {
        $this->_data['seed'] = $seed;

        return $this;
    }

    /**
     * Get timestamp
     *
     * @return float|null
     */
    public function getTimestamp(): ?float {
        return $this->_data["timestamp"];
    }

    /**
     * Set timestamp
     * 
     * @param float|null $timestamp Block creation timestamp in seconds since eposh
     * @return $this
     */
    public function setTimestamp(?float $timestamp) {
        $this->_data['timestamp'] = $timestamp;

        return $this;
    }

    /**
     * Get txns
     *
     * @return \Tatum\Model\AlgoTx[]|null
     */
    public function getTxns(): ?array {
        return $this->_data["txns"];
    }

    /**
     * Set txns
     * 
     * @param \Tatum\Model\AlgoTx[]|null $txns Array of transactions
     * @return $this
     */
    public function setTxns(?array $txns) {
        $this->_data['txns'] = $txns;

        return $this;
    }

    /**
     * Get txn
     *
     * @return string|null
     */
    public function getTxn(): ?string {
        return $this->_data["txn"];
    }

    /**
     * Set txn
     * 
     * @param string|null $txn TransactionsRoot authenticates the set of transactions appearing in the block.
     * @return $this
     */
    public function setTxn(?string $txn) {
        $this->_data['txn'] = $txn;

        return $this;
    }

    /**
     * Get txnc
     *
     * @return float|null
     */
    public function getTxnc(): ?float {
        return $this->_data["txnc"];
    }

    /**
     * Set txnc
     * 
     * @param float|null $txnc TxnCounter counts the number of transations committed in the ledger
     * @return $this
     */
    public function setTxnc(?float $txnc) {
        $this->_data['txnc'] = $txnc;

        return $this;
    }

    /**
     * Get upgrade_state
     *
     * @return object|null
     */
    public function getUpgradeState(): ?object {
        return $this->_data["upgrade_state"];
    }

    /**
     * Set upgrade_state
     * 
     * @param object|null $upgrade_state upgrade state
     * @return $this
     */
    public function setUpgradeState(?object $upgrade_state) {
        $this->_data['upgrade_state'] = $upgrade_state;

        return $this;
    }

    /**
     * Get upgrade_vote
     *
     * @return object|null
     */
    public function getUpgradeVote(): ?object {
        return $this->_data["upgrade_vote"];
    }

    /**
     * Set upgrade_vote
     * 
     * @param object|null $upgrade_vote upgrade vote
     * @return $this
     */
    public function setUpgradeVote(?object $upgrade_vote) {
        $this->_data['upgrade_vote'] = $upgrade_vote;

        return $this;
    }
}
